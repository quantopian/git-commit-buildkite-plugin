#!/usr/bin/env bash

set -euo pipefail

PLUGIN_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)/.."
export PATH="${PLUGIN_DIR}/bin:${PATH}"

if [[ ${BUILDKITE_COMMAND_EXIT_STATUS:-0} != "0" ]]
then
  echo "--- Skipping git-commit because the command failed"
  exit 0
fi

add_path=${BUILDKITE_PLUGIN_GIT_COMMIT_ADD:-}
create_branch=${BUILDKITE_PLUGIN_GIT_COMMIT_CREATE_BRANCH:-false}
remote=${BUILDKITE_PLUGIN_GIT_COMMIT_REMOTE:-origin}
branch=${BUILDKITE_PLUGIN_GIT_COMMIT_BRANCH:-${BUILDKITE_BRANCH}}
commitmessage=${BUILDKITE_PLUGIN_GIT_COMMIT_MESSAGE:-"Build #${BUILDKITE_BUILD_NUMBER}"}
tag=${BUILDKITE_PLUGIN_GIT_COMMIT_TAG:-}
tagmessage=${BUILDKITE_PLUGIN_GIT_COMMIT_TAG_MESSAGE:-"Build #${BUILDKITE_BUILD_NUMBER}"}
user_name=${BUILDKITE_PLUGIN_GIT_COMMIT_USER_NAME:-Buildkite CI}
user_email=${BUILDKITE_PLUGIN_GIT_COMMIT_USER_EMAIL:-sre-team@quantopian.com}
pull_request=${BUILDKITE_PLUGIN_GIT_COMMIT_PULL_REQUEST:-false}
pull_request_labels=${BUILDKITE_PLUGIN_GIT_COMMIT_PULL_REQUEST_LABELS}
pull_request_message=${BUILDKITE_PLUGIN_GIT_COMMIT_PULL_REQUEST_MESSAGE}
pull_request_wait_for_merge=${BUILDKITE_PLUGIN_GIT_COMMIT_PULL_REQUEST_WAIT_FOR_MERGE:-false}
pull_request_wait_for_merge_timeout_mins=${BUILDKITE_PLUGIN_GIT_COMMIT_PULL_REQUEST_WAIT_FOR_MERGE_TIMEOUT_MINS:-10}

git config user.name "$user_name"
git config user.email "$user_email"

if [[ "$create_branch" == "true" ]]; then
  git checkout -b "${branch}"
else
  git fetch "${remote}" "${branch}:${branch}"
  git checkout "${branch}"
fi

# Add commits
if [[ -n "$add_path" ]]; then
  git add -A "$add_path"

  if ! git diff-index --quiet HEAD; then
    echo "--- Committing changes"
    git commit -m "${commitmessage}"

    echo "--- Pushing ${branch} to ${remote}"
    git push "${remote}" "${branch}"
  else
    echo "--- No changes to commit"
  fi
fi

# Add tag
if [[ -n "$tag" ]]; then
  echo "--- Tagging with $tag"
  git tag -f -a $tag -m "$tagmessage"

  echo "--- Pushing tag to ${remote}"
  git push -f ${remote} --tags "$tag"
else
  echo "--- No tags to push"
fi

if [[ "$pull_request" == "true" ]]; then
  url=$(GITHUB_TOKEN=${GITHUB_PR_API_TOKEN} hub pull-request --no-edit -l "${pull_request_labels}" -m "${pull_request_message}")
  pr_number=${url##*/}
  echo "--- Pull request $pr_number submitted"
  echo "${url}"

  if [[ $pull_request_wait_for_merge == "true" ]]; then
    echo "--- Waiting up to ${pull_request_wait_for_merge_timeout_mins} minutes for PR ${pr_number} to merge"
    timeout_secs=$(( $pull_request_wait_for_merge_timeout_mins * 60 ))
    elapsed_secs=0
    while [[ $elapsed_secs -lt $timeout_secs ]]; do
      if pr_out=$(hub api /repos/quantopian/qbernetes/pulls/${pr_number}/merge); then
        echo "PR was merged"
        exit 0
      else
        echo "$pr_out"
      fi
      sleep 5
      elapsed_secs=$(( $elapsed_secs + 5 ))
    done
    echo "Error: PR was not merged in time. Exiting."
    exit 100
  fi
fi
